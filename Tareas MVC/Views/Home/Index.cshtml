@using Microsoft.AspNetCore.Mvc.Localization;

@inject IViewLocalizer localizer;
@{
    ViewData["title"] = "Mis tareas";
}

<div class="text-center">
    <h1 class="display-4">
        @localizer["Mis tareas"]
    </h1>
    <button type="button" class="btn btn-primary mb-3" onclick="agregarNuevaTareaAlListado()">@localizer["Agregar nueva tarea"]</button>
</div>

<div class="text-center" id="contenedor-listado-tareas">
    <div id="reordenable" 
        class="text-start" 
        data-bind="foreach: tarea">
            <div name="tarea" 
                class="border mb-2 p-2" 
                style="cursor: pointer" 
                data-bind="click: manejarClickTarea">

                    <div data-bind="text: titulo, hidden: esNuevo" 
                         class="fw-bold">
                    </div>

                    <div name="pasos-resumen" data-bind="visible: pasosTotal() > 0">
                        <span data-bind="text: pasosRealizados"></span>/<span data-bind="text: pasosTotal">
                        </span>

                        <span data-bind="text: porcentajeCompletado"></span>
                    </div>

                    <input type ="text" 
                           name="titulo-tarea" 
                           autocomplete="off" 
                           data-bind="value: titulo, 
                                   visible: esNuevo, 
                                   attr: {'data-id': id},
                                   event: {focusout: manejarFocusoutTituloTarea}"/>
            </div>
    </div>

    <div data-bind="visible: cargando" class="spinner-border">
        <span class="visually-hidden">Cargando...</span>
    </div>

    <div data-bind="visible: noHayTareas">
        <h2>No hay tareas para mostrar.</h2>
    </div>
</div>

<partial name="_ModalEditarTarea" />

@section Scripts{
    <script asp-append-version="true" src="~/js/Tareas.js"></script>
    <script asp-append-version="true" src="~/js/utilidades.js"></script>
    <script asp-append-version="true" src="~/js/pasos.js"></script>
    <script asp-append-version="true" src="~/js/archivos-adjuntos.js"></script>

    <script>


        const UrlTareas = '/api/tareas';
        const UrlPasos = "/api/pasos";
        const UrlArchivos = "/api/archivos";

        const modalEditarTarea = document.getElementById('modal-editar-tarea');
        const modalEditarTareaBootstrap = new bootstrap.Modal(modalEditarTarea);

        //const 
        function ListadoTareasViewModelFn() {
            var self = this;
            self.tarea = ko.observableArray([]);
            self.cargando = ko.observable(true);

            //Funcion pura calculada, es decir, no retorna nada
            self.noHayTareas = ko.pureComputed(function (){
                if(self.cargando()){
                    return false;
                }
                return self.tarea().length === 0;
            })
        }

        function tareasElemtosListadoViewModel ({id, titulo, pasosTotal, pasosRealizados}){

             var self = this;
             self.id = ko.observable(id);
             self.titulo = ko.observable(titulo);
             
             self.pasosTotal = ko.observable(pasosTotal);
             self.pasosRealizados = ko.observable(pasosRealizados);

             self.esNuevo = ko.pureComputed(function (){

                 return self.id() == 0;
             });

             self.porcentajeCompletado = ko.pureComputed(function () {
                 const calculo = Math.round(self.pasosRealizados() * 1.0 / self.pasosTotal() * 100);

                 return `(${calculo}%)`;
             });

        }

        const tareaEditarViewModel = {
            id: 0,
            titulo: ko.observable(''),
            descripcion: ko.observable(''),
            pasos: ko.observableArray([]),
            archivosAdjuntos: ko.observableArray([])
        } 

        const ListadoTareasViewModel = new ListadoTareasViewModelFn();

        function pasoViewModel ({id, descripcion, realizado, ModoEdicion}){

            var self = this;
            self.id = ko.observable(id || 0);
            self.descripcion = ko.observable(descripcion || '');
            self.descripcionAnterior = '';
            self.realizado = ko.observable(realizado);
            self.ModoEdicion = ko.observable(ModoEdicion);

            self.esNuevo = ko.pureComputed(function() {
                return self.id() == 0;
            })

        }

        ObtenerTareas();

        ko.applyBindings(ListadoTareasViewModel, document.getElementById('contenedor-listado-tareas'));
        ko.applyBindings(tareaEditarViewModel, document.getElementById('modal-editar-tarea'));

    </script>
}