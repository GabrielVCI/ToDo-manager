@using Microsoft.AspNetCore.Mvc.Localization;

@inject IViewLocalizer localizer;
@{
    ViewData["title"] = "Mis tareas";
}

<div class="text-center">
    <h1 class="display-4">
        @localizer["Mis tareas"]
    </h1>
    <button type="button" class="btn btn-primary mb-3" onclick="agregarNuevaTareaAlListado()">@localizer["Agregar nueva tarea"]</button>
</div>

<div class="text-center" id="contenedor-listado-tareas">
    <div class="text-start" data-bind="foreach: tarea">
        <div name="tarea" class="border mb-2 p-2" style="cursor: pointer"> @*add border here in class*@
            <div data-bind="text: titulo, hidden: esNuevo" class="fw-bold">
                
            </div>

            <input type ="text" name="titulo-tarea" autocomplete="off" data-bind="value: titulo, visible: esNuevo, 
            event: {focusout: manejarFocusoutTituloTarea}" onfocus/>
        </div>
    </div>

    <div data-bind="visible: cargando" class="spinner-border">
        <span class="visually-hidden">Cargando...</span>
    </div>

    <div data-bind="visible: noHayTareas">
        <h2>No hay tareas para mostrar.</h2>
    </div>
</div>
@section Scripts{
    <script asp-append-version="true" src="~/js/Tareas.js">

    </script>

    <script>
        function ListadoTareasViewModelFn() {
            var self = this;
            self.tarea = ko.observableArray([]);
            self.cargando = ko.observable(true);

            //Funcion pura calculada, es decir, no retorna nada
            self.noHayTareas = ko.pureComputed(function (){
                if(self.cargando()){
                    return false;
                }
                return self.tarea().length === 0;
            })
        }

        function tareasElemtosListadoViewModel ({id, titulo}){

             var self = this;
             self.id = ko.observable(id);
             self.titulo = ko.observable(titulo);
             self.esNuevo = ko.pureComputed(function (){

                 return self.id() == 0;
             })

        }

        const ListadoTareasViewModel = new ListadoTareasViewModelFn();

        setTimeout(() => {
            //ListadoTareasViewModel.tarea.push({titulo: 'Tarea 1'});
            ListadoTareasViewModel.cargando(false);
        }, 100)

        ko.applyBindings(ListadoTareasViewModel, document.getElementById('contenedor-listado-tareas'));

    </script>
}